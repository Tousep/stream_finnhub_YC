name: 'Terraform destroy'

on:
  workflow_call:
    inputs: 
      version:
        description: 'Version'
        required: True
        type: string
      environment:
        description: Environment
        required: True  
        type: string
  workflow_dispatch:
    inputs: 
      version:
        description: 'Version'
        required: True
        type: string
      environment:
        description: 'Environment'
        required: True
        type: choice
        options:
        - uat
        - prod

permissions:
  contents: read

jobs:
  terraform_destroy:
    name: 'Terraform destroy'
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4
  
      - name: IAM Token
        id: issue-iam-token
        uses: yc-actions/yc-iam-token@v1
        with: 
          yc-key-id: ${{ secrets.YC_KEY_ID }}
          yc-service-account-id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
          yc-private-key: ${{ secrets.YC_PRIVATE_KEY }}
  
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        
      - name: Terraform Init
        working-directory: ./terraform-ydb
        env:
          ACCESS_KEY: ${{ secrets.TF_S3_ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.TF_S3_SECRET_KEY }}
        run: terraform init -backend-config="access_key=$ACCESS_KEY" -backend-config="secret_key=$SECRET_KEY"

      # Generates an execution plan for Terraform
      - name: Terraform Plan
        working-directory: ./terraform-ydb
        env:
          YC_TOKEN: ${{ steps.issue-iam-token.outputs.token }}
          YC_FOLDER_ID: ${{ vars.YC_FOLDER_ID }}
          YC_CONTAINER_REGISTRY: ${{ vars.YC_CONTAINER_REGISTRY }}
          YC_SERVICE_ACCOUNT_ID: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
        run: terraform plan -destroy -var="YC_TOKEN=$YC_TOKEN" -var="YC_FOLDER_ID=$YC_FOLDER_ID" -var="YC_CONTAINER_REGISTRY=$YC_CONTAINER_REGISTRY" -var="YC_SERVICE_ACCOUNT_ID=$YC_SERVICE_ACCOUNT_ID"

      - name: Terraform destroy
        working-directory: ./terraform-ydb
        env:
          YC_TOKEN: ${{ steps.issue-iam-token.outputs.token }}
          YC_FOLDER_ID: ${{ vars.YC_FOLDER_ID }}
          YC_CONTAINER_REGISTRY: ${{ vars.YC_CONTAINER_REGISTRY }}
          YC_SERVICE_ACCOUNT_ID: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
        run: terraform destroy -auto-approve  -var="YC_TOKEN=$YC_TOKEN" -var="YC_FOLDER_ID=$YC_FOLDER_ID" -var="YC_CONTAINER_REGISTRY=$YC_CONTAINER_REGISTRY" -var="YC_SERVICE_ACCOUNT_ID=$YC_SERVICE_ACCOUNT_ID"